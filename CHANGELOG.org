#+title: Change log of selected-window-accent-mode
#+author: James Dyer
#+email: captainflasmr@gmail.com
#+language: en
#+options: ':t toc:nil author:nil email:nil num:nil title:nil
#+todo: TODO DOING | DONE
#+startup: showall

This document contains the release notes for each tagged commit on the
project's main git repository: [[https://github.com/captainflasmr/selected-window-accent-mode]].

* Versions

** v0.9.5 <2024-08-24>

Enhanced selected-window-accent functionality with blending options

This means that not only will the modeline, fringes and header be accent colored, but also the whole selected window background color, tinted to the alpha chosen.

- Introduced =selected-window-accent-use-blend-background= and =selected-window-accent-use-blend-alpha= to allow blending of the accent color with the background of the selected window a selected alpha amount.
- Introduced new toggle functions and added to transient:
  - =selected-window-accent-toggle-blend-background=
  - =selected-window-accent-toggle-pywal=
- Added function =selected-window-accent-blend-colors= to support blending of two colors.
- Updated =selected-window-accent--set-foreground-color= and =selected-window-accent= functions to incorporate new blending feature.
- Improved existing functions for setting and toggling accent features, ensuring consistent style and formatting.
- Cleaned up indentation and formatting inconsistencies across the file for better readability.

** v0.9.0 <2024-08-10>

Add Pywal color integration to selected-window-accent-mode

- Introduce `selected-window-accent-use-pywal` option to use a Pywal-generated color palette.
- Add `selected-window-accent--get-pywal-color` function to fetch colors from Pywal palette.
- Update logic in `selected-window-accent` function to use Pywal color if enabled.
- Require `json` package for handling Pywal palette.

** v0.8.1 <2024-08-03>

feat: Add transient dependency and fix indentation

- Added 'transient' package requirement to `Package-Requires` in the header.
- Fixed indentation inconsistencies across the file for better code readability.

Details:
- Added `transient` package dependency:
  - Updated the header to include `(transient "0.1.0")` in `Package-Requires`.

** v0.8.0 <2024-07-15 Mon>

feat: Add transient menu, enhance foreground customization

- Added transient menu for interactive adjustments (see README usage)
- Upgraded emacs dependency to 28.1.
- Added `selected-window-accent-fg-color` for custom foreground accent color.
- Introduced various `defcustom` options for finer control over foreground accent:
  - `selected-window-accent-foreground-adjust-factor`
  - `selected-window-accent--use-complementary-color`
  - `selected-window-accent--foreground-invert-state`
  - `selected-window-accent--foreground-offset`
- Implemented functions for adjusting foreground brightness:
  - `selected-window-accent-flip-foreground-color`
  - `selected-window-accent-increment-foreground-color`
  - `selected-window-accent-decrement-foreground-color`
  - `selected-window-accent-toggle-complementary-color`
  - `selected-window-accent-toggle-tab-accent`
  - `selected-window-accent-toggle-smart-borders`
- Provided a function to output current settings for copy and paste to emacs init file: `selected-window-accent-output-selected-window-accent-settings`
- Miscellaneous improvements and refactoring.

** v0.7.0 <2024-07-09 Tue>

 - ISSUE #4 Doesn't work well with other packages
 - ISSUE #3 Package breaks fringes
 - restore modeline height when switching between modes

** v0.6.0 <2024-02-09 Fri>

- ISSUE #1 Do not apply highlighting when frame only contains 1 window
- define accent color saturation adjustment
- define accent color darken adjustment
- highlight selected tab with same accent color
- add to MELPA

** v0.5.0 <2024-01-29 Mon>

- minor change to properly format color-theme-buffer-local

** v0.4.0 <2024-01-29>

- pacified package-lint with visual-fill-column 0.0
- Added similar package comparisons as suggested

** v0.3.0 <2024-01-25>

- rename color-name-to-hex to selected-window-accent--color-name-to-hex

** v0.2.0 <2024-01-25>

- Fixing issues to be able to submit to MELPA
- byte-compile / flycheck
- checkdoc
- package-lint
- images to img directory and referenced from README

** v0.1.0 <2024-01-12>

This is considered beta.

- expand emacs help / documentation
- add GNU header
- cope better with 0 thickness
- Add ChangeLog.
- visual-fill-column-mode not working again!
- improve modeline contrast between fg and bg

* Testing

developing locally using:

#+begin_src elisp
(use-package selected-window-accent-mode
   :load-path "~/repos/selected-window-accent-mode"
#+end_src

and running through and evaluating elisp code in selected-window-accent-mode-quick-tests.el

* Validation

** eval-buffer

** flycheck

** checkdoc

Use =checkdoc= to make sure that your package follows the conventions for documentation strings, within reason.

Buffer comments and tags:  Ok
Documentation style:       Ok
Message/Query text style:  Ok
Unwanted Spaces:           Ok

** package-lint-current-buffer

=package-lint= to help identify common errors in package metadata.

** check in basic vanilla emacs

Just in case I am using some dependencies without realising it!

emacs -q -l ~/source/repos/selected-window-accent-mode/selected-window-accent-init-file.el

In this case init-file.el can be:

#+begin_src elisp
;;
;; -> package-archives
;;

(require 'package)

(setq package-archives '(("melpa" . "https://melpa.org/packages/")
                          ("elpa" . "https://elpa.gnu.org/packages/")
                          ("org" . "https://orgmode.org/elpa/")))

(unless (package-installed-p 'use-package)
  (package-install 'use-package))
(setq use-package-verbose t)
(setq use-package-always-ensure t)
(require 'use-package)
(setq load-prefer-newer t)

;; (when init-file-debug
(setq use-package-verbose t
  use-package-expand-minimally nil
  use-package-compute-statistics t
  debug-on-error nil)

  ;;
;; -> selected-window-accent-mode
;;

(use-package selected-window-accent-mode
  :load-path "~/source/repos/selected-window-accent-mode"
  ;; :ensure nil
  ;; :vc (:fetcher github :repo "captainflasmr/selected-window-accent-mode")
  :config (selected-window-accent-mode 1)
  :custom
  (selected-window-accent-fringe-thickness 10)
  (selected-window-accent-percentage-darken 0)
  (selected-window-accent-percentage-desaturate 0)
  (selected-window-accent-smart-borders t)
  (selected-window-accent-use-blend-background t)
  (selected-window-accent-use-blend-alpha 0.2)
  (selected-window-accent-tab-accent t)
  (selected-window-accent-use-pywal t)
  (selected-window-accent-custom-color "cyan4")
  (selected-window-accent-mode-style 'default))

(eval-after-load 'selected-window-accent-mode
  '(progn
     (define-key global-map (kbd "C-c w") 'selected-window-accent-transient)))
#+end_src
