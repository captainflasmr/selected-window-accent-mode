#+title: Change log of selected-window-accent-mode
#+author: James Dyer
#+email: captainflasmr@gmail.com
#+language: en
#+options: ':t toc:nil author:nil email:nil num:nil title:nil
#+todo: TODO DOING | DONE
#+startup: showall

This document contains the release notes for each tagged commit on the
project's main git repository: [[https://github.com/captainflasmr/selected-window-accent-mode]].

* Versions

** v0.9 <2024-08-10>

Add Pywal color integration to selected-window-accent-mode

- Introduce `selected-window-accent-use-pywal` option to use a Pywal-generated color palette.
- Add `selected-window-accent--get-pywal-color` function to fetch colors from Pywal palette.
- Update logic in `selected-window-accent` function to use Pywal color if enabled.
- Require `json` package for handling Pywal palette.

** v0.8.1 <2024-08-03>

feat: Add transient dependency and fix indentation

- Added 'transient' package requirement to `Package-Requires` in the header.
- Fixed indentation inconsistencies across the file for better code readability.

Details:
- Added `transient` package dependency:
  - Updated the header to include `(transient "0.1.0")` in `Package-Requires`.

** v0.8.0 <2024-07-15 Mon>

feat: Add transient menu, enhance foreground customization

- Added transient menu for interactive adjustments (see README usage)
- Upgraded emacs dependency to 28.1.
- Added `selected-window-accent-fg-color` for custom foreground accent color.
- Introduced various `defcustom` options for finer control over foreground accent:
  - `selected-window-accent-foreground-adjust-factor`
  - `selected-window-accent--use-complementary-color`
  - `selected-window-accent--foreground-invert-state`
  - `selected-window-accent--foreground-offset`
- Implemented functions for adjusting foreground brightness:
  - `selected-window-accent-flip-foreground-color`
  - `selected-window-accent-increment-foreground-color`
  - `selected-window-accent-decrement-foreground-color`
  - `selected-window-accent-toggle-complementary-color`
  - `selected-window-accent-toggle-tab-accent`
  - `selected-window-accent-toggle-smart-borders`
- Provided a function to output current settings for copy and paste to emacs init file: `selected-window-accent-output-selected-window-accent-settings`
- Miscellaneous improvements and refactoring.

** v0.7.0 <2024-07-09 Tue>

 - ISSUE #4 Doesn't work well with other packages
 - ISSUE #3 Package breaks fringes
 - restore modeline height when switching between modes

** v0.6.0 <2024-02-09 Fri>

- ISSUE #1 Do not apply highlighting when frame only contains 1 window
- define accent color saturation adjustment
- define accent color darken adjustment
- highlight selected tab with same accent color
- add to MELPA

** v0.5.0 <2024-01-29 Mon>

- minor change to properly format color-theme-buffer-local

** v0.4.0 <2024-01-29>

- pacified package-lint with visual-fill-column 0.0
- Added similar package comparisons as suggested

** v0.3.0 <2024-01-25>

- rename color-name-to-hex to selected-window-accent--color-name-to-hex

** v0.2.0 <2024-01-25>

- Fixing issues to be able to submit to MELPA
- byte-compile / flycheck
- checkdoc
- package-lint
- images to img directory and referenced from README

** v0.1.0 <2024-01-12>

This is considered beta.

- expand emacs help / documentation
- add GNU header
- cope better with 0 thickness
- Add ChangeLog.
- visual-fill-column-mode not working again!
- improve modeline contrast between fg and bg

* Testing

developing locally using:

#+begin_src elisp
(use-package selected-window-accent-mode
   :load-path "~/repos/selected-window-accent-mode"
#+end_src

commiting to github then removing ~/.config/emacs/elpa/selected-window-accent-mode, changing emacs init to:

#+begin_src elisp
(use-package selected-window-accent-mode
  :vc (:fetcher github :repo "captainflasmr/selected-window-accent-mode")
#+end_src

restart emacs and test

and running through and evaluating elisp code in selected-window-accent-mode-quick-tests.el

* Validation

** eval-buffer

** flycheck

** checkdoc

Use =checkdoc= to make sure that your package follows the conventions for documentation strings, within reason.

Buffer comments and tags:  Ok
Documentation style:       Ok
Message/Query text style:  Ok
Unwanted Spaces:           Ok

** package-lint-current-buffer

=package-lint= to help identify common errors in package metadata.
